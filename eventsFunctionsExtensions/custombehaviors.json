{
  "author": "",
  "category": "",
  "extensionNamespace": "",
  "fullName": "",
  "helpPath": "",
  "iconUrl": "",
  "name": "CustomBehaviors",
  "previewIconUrl": "",
  "shortDescription": "",
  "version": "",
  "description": "",
  "tags": [],
  "authorIds": [],
  "dependencies": [],
  "eventsFunctions": [],
  "eventsBasedBehaviors": [
    {
      "description": "Control the object's movement in 3D space.",
      "fullName": "Movable",
      "name": "Movable",
      "objectType": "Scene3D::Cube3DObject",
      "eventsFunctions": [
        {
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "sentence": "",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::SetPropertyTargetX"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "Object.X()"
                  ]
                },
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::SetPropertyTargetY"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "Object.Y()"
                  ]
                },
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::SetPropertyTargetZ"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "Object.Z()"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Movable",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "sentence": "",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::PropertyTarget"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "MettreX"
                  },
                  "parameters": [
                    "Object",
                    "+",
                    "sign(TargetX - Object.X()) * min(abs(TargetX - Object.X()), Speed / 60)"
                  ]
                },
                {
                  "type": {
                    "value": "MettreY"
                  },
                  "parameters": [
                    "Object",
                    "+",
                    "sign(TargetY - Object.Y()) * min(abs(TargetY - Object.Y()), Speed / 60)"
                  ]
                },
                {
                  "type": {
                    "value": "Scene3D::Base3DBehavior::SetZ"
                  },
                  "parameters": [
                    "Object",
                    "Object3D",
                    "+",
                    "sign(TargetZ - Object.Z()) * min(abs(TargetZ - Object.Z()), Speed / 60)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PosX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "TargetX"
                  ]
                },
                {
                  "type": {
                    "value": "PosY"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "TargetY"
                  ]
                },
                {
                  "type": {
                    "value": "Scene3D::Base3DBehavior::Z"
                  },
                  "parameters": [
                    "Object",
                    "Object3D",
                    "=",
                    "TargetZ"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::SetPropertyTarget"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "no"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Movable",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Move an object to a position",
          "fullName": "Move to a position",
          "functionType": "Action",
          "name": "MoveTowardPosition",
          "sentence": "Move _PARAM0_ to (_PARAM2_, _PARAM3_, _PARAM4_)",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::SetPropertyTarget"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "yes"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::SetPropertyTargetX"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "x"
                  ]
                },
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::SetPropertyTargetY"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "y"
                  ]
                },
                {
                  "type": {
                    "value": "CustomBehaviors::Movable::SetPropertyTargetZ"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "z"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Movable",
              "type": "behavior"
            },
            {
              "description": "X position",
              "name": "x",
              "type": "expression"
            },
            {
              "description": "Y position",
              "name": "y",
              "type": "expression"
            },
            {
              "description": "Z position",
              "name": "z",
              "type": "expression"
            }
          ],
          "objectGroups": []
        },
        {
          "fullName": "Put the object around another (3D)",
          "functionType": "Action",
          "group": "POSITION",
          "name": "PutTheObjectAroundAnother",
          "sentence": "Put _PARAM0_ around _PARAM2_, with an angle of _PARAM4_ degrees, an elevation angle of _PARAM5_ degrees, and _PARAM3_ pixels distance.",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetCenterX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "Center.CenterX() + cos(ToRad(Angle)) * (cos(ToRad(ElevationAngle)) * Distance)"
                  ]
                },
                {
                  "type": {
                    "value": "SetCenterY"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "Center.CenterY() + sin(ToRad(Angle)) * (cos(ToRad(ElevationAngle)) * Distance)"
                  ]
                },
                {
                  "type": {
                    "value": "Scene3D::Base3DBehavior::SetCenterZ"
                  },
                  "parameters": [
                    "Object",
                    "Object3D",
                    "=",
                    "Center.Object3D::CenterZ() + (sin(ToRad(ElevationAngle)) * Distance)"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Movable",
              "type": "behavior"
            },
            {
              "description": "\"Center\" Object",
              "name": "Center",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            },
            {
              "description": "Distance",
              "name": "Distance",
              "type": "expression"
            },
            {
              "description": "Angle, in degrees",
              "name": "Angle",
              "type": "expression"
            },
            {
              "description": "Elevation angle, in degrees",
              "name": "ElevationAngle",
              "type": "expression"
            }
          ],
          "objectGroups": []
        },
        {
          "fullName": "Rotate the object around another (Used for items)",
          "functionType": "Action",
          "group": "POSITION",
          "name": "RotateTheObjectAroundAnother",
          "sentence": "Put _PARAM0_ around _PARAM2_, with a distance of _PARAM3_, an angle of _PARAM4_ degrees, and an elevation angle of _PARAM5_ degrees. Use an OffsetDistance of _PARAM6_ and an OffsetAngle of _PARAM7_.",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetCenterX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "(Center.CenterX() + cos(ToRad(Object.Angle() + OffsetAngle)) * OffsetDistance) + cos(ToRad(Angle)) * ((cos(ToRad(ElevationAngle)) * Distance))"
                  ]
                },
                {
                  "type": {
                    "value": "SetCenterY"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "(Center.CenterY() + sin(ToRad(Object.Angle() + OffsetAngle)) * OffsetDistance) + sin(ToRad(Angle)) * ((cos(ToRad(ElevationAngle)) * Distance))"
                  ]
                },
                {
                  "type": {
                    "value": "Scene3D::Base3DBehavior::SetCenterZ"
                  },
                  "parameters": [
                    "Object",
                    "Object3D",
                    "=",
                    "Center.Object3D::CenterZ() - (sin(ToRad(ElevationAngle)) * Distance)"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Movable",
              "type": "behavior"
            },
            {
              "description": "\"Center\" Object",
              "name": "Center",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            },
            {
              "description": "Distance",
              "name": "Distance",
              "type": "expression"
            },
            {
              "description": "Angle, in degrees",
              "name": "Angle",
              "type": "expression"
            },
            {
              "description": "Elevation angle, in degrees",
              "name": "ElevationAngle",
              "type": "expression"
            },
            {
              "description": "",
              "name": "OffsetDistance",
              "type": "expression"
            },
            {
              "description": "",
              "name": "OffsetAngle",
              "type": "expression"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": [
        {
          "value": "30",
          "type": "Number",
          "unit": "PixelSpeed",
          "label": "Speed",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": false,
          "name": "Speed"
        },
        {
          "value": "",
          "type": "Number",
          "unit": "Pixel",
          "label": "TargetX",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": true,
          "name": "TargetX"
        },
        {
          "value": "",
          "type": "Number",
          "unit": "Pixel",
          "label": "TargetY",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": true,
          "name": "TargetY"
        },
        {
          "value": "",
          "type": "Number",
          "unit": "Pixel",
          "label": "TargetZ",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": true,
          "name": "TargetZ"
        },
        {
          "value": "",
          "type": "Boolean",
          "label": "",
          "description": "The object is currently moving to a target",
          "group": "",
          "extraInformation": [],
          "hidden": true,
          "name": "Target"
        }
      ],
      "sharedPropertyDescriptors": []
    },
    {
      "description": "",
      "fullName": "",
      "name": "RotatingDoor",
      "objectType": "Scene3D::Cube3DObject",
      "eventsFunctions": [
        {
          "fullName": "Link the door and hinge",
          "functionType": "Action",
          "name": "SetUp",
          "sentence": "Link _PARAM0_ with _PARAM2_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PickNearest"
                  },
                  "parameters": [
                    "Hinge",
                    "Object.CenterX()",
                    "Object.CenterY()",
                    ""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "Hinge"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "CustomBehaviors::RotatingDoor::SetPropertyStartingAngle"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "Object.Angle()"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::RotatingDoor",
              "type": "behavior"
            },
            {
              "description": "Hinge object",
              "name": "Hinge",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Update the door animation",
          "fullName": "Update the door",
          "functionType": "Action",
          "name": "Update",
          "sentence": "Update _PARAM0_ with hinge _PARAM2_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "CustomBehaviors::RotatingDoor::PropertyDirection"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "\"Clockwise\""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "CustomBehaviors::RotatingDoor::PropertyOpen"
                      },
                      "parameters": [
                        "Object",
                        "Behavior"
                      ]
                    },
                    {
                      "type": {
                        "value": "Angle"
                      },
                      "parameters": [
                        "Object",
                        "<=",
                        "Object.Behavior::PropertyStartingAngle() + 90"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetAngle"
                      },
                      "parameters": [
                        "Object",
                        "+",
                        "(TimeDelta() * 90) / Object.Behavior::PropertyDuration()"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "CustomBehaviors::RotatingDoor::PropertyOpen"
                      },
                      "parameters": [
                        "Object",
                        "Behavior"
                      ]
                    },
                    {
                      "type": {
                        "value": "Angle"
                      },
                      "parameters": [
                        "Object",
                        ">=",
                        "Object.Behavior::PropertyStartingAngle()"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetAngle"
                      },
                      "parameters": [
                        "Object",
                        "-",
                        "(TimeDelta() * 90) / Object.Behavior::PropertyDuration()"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      },
                      "parameters": [
                        "",
                        "Hinge",
                        "Object",
                        ""
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "MettreAutour"
                          },
                          "parameters": [
                            "Object",
                            "Hinge",
                            "Object.Height() / 2",
                            "90 + Object.Angle()"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "CustomBehaviors::RotatingDoor::PropertyDirection"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "\"Counterclockwise\""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "CustomBehaviors::RotatingDoor::PropertyOpen"
                      },
                      "parameters": [
                        "Object",
                        "Behavior"
                      ]
                    },
                    {
                      "type": {
                        "value": "Angle"
                      },
                      "parameters": [
                        "Object",
                        ">=",
                        "Object.Behavior::PropertyStartingAngle() - 90"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetAngle"
                      },
                      "parameters": [
                        "Object",
                        "-",
                        "(TimeDelta() * 90) / Object.Behavior::PropertyDuration()"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "CustomBehaviors::RotatingDoor::PropertyOpen"
                      },
                      "parameters": [
                        "Object",
                        "Behavior"
                      ]
                    },
                    {
                      "type": {
                        "value": "Angle"
                      },
                      "parameters": [
                        "Object",
                        "<=",
                        "Object.Behavior::PropertyStartingAngle()"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetAngle"
                      },
                      "parameters": [
                        "Object",
                        "+",
                        "(TimeDelta() * 90) / Object.Behavior::PropertyDuration()"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      },
                      "parameters": [
                        "",
                        "Hinge",
                        "Object",
                        ""
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "MettreAutour"
                          },
                          "parameters": [
                            "Object",
                            "Hinge",
                            "Object.Height() / 2",
                            "90 + Object.Angle()"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::RotatingDoor",
              "type": "behavior"
            },
            {
              "description": "Hinge object",
              "name": "Hinge",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Toggle the door (open if closed; close if opened)",
          "fullName": "Open or close the door",
          "functionType": "Action",
          "name": "Toggle",
          "sentence": "Toggle _PARAM0_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Movement3D::RotatingDoor::TogglePropertyOpen"
                  },
                  "parameters": [
                    "Object",
                    "Behavior"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::RotatingDoor",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": [
        {
          "value": "Clockwise",
          "type": "Choice",
          "label": "Direction the door swings to open",
          "description": "",
          "group": "",
          "extraInformation": [
            "Clockwise",
            "Counterclockwise"
          ],
          "hidden": false,
          "name": "Direction"
        },
        {
          "value": "",
          "type": "Number",
          "unit": "Second",
          "label": "How long the door takes to open or close",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": false,
          "name": "Duration"
        },
        {
          "value": "",
          "type": "Boolean",
          "label": "",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": true,
          "name": "Open"
        },
        {
          "value": "",
          "type": "Number",
          "unit": "DegreeAngle",
          "label": "",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": true,
          "name": "StartingAngle"
        }
      ],
      "sharedPropertyDescriptors": []
    },
    {
      "description": "Gives the object sliding door behavior",
      "fullName": "SlidingDoor",
      "name": "SlidingDoor",
      "objectType": "Scene3D::Cube3DObject",
      "eventsFunctions": [
        {
          "description": "Open the door",
          "fullName": "Open the door",
          "functionType": "Action",
          "name": "Open",
          "sentence": "Open _PARAM0_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "ObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "Object",
                    "Closed",
                    "True"
                  ]
                },
                {
                  "type": {
                    "value": "ObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "Object",
                    "Broken",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "Object",
                    "Closed",
                    "False"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "Direction",
                        "=",
                        "\"Right\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "CustomBehaviors::Movable::MoveTowardPosition"
                      },
                      "parameters": [
                        "Object",
                        "MoveableBehavior",
                        "Object.X() + Object.Width() - 1",
                        "Object.Y()",
                        "Object.Z()",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "Direction",
                        "=",
                        "\"Down\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "CustomBehaviors::Movable::MoveTowardPosition"
                      },
                      "parameters": [
                        "Object",
                        "MoveableBehavior",
                        "Object.X()",
                        "Object.Y() + Object.Height() - 1",
                        "Object.Z()",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "Direction",
                        "=",
                        "\"Left\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "CustomBehaviors::Movable::MoveTowardPosition"
                      },
                      "parameters": [
                        "Object",
                        "MoveableBehavior",
                        "Object.X() - Object.Width() + 1",
                        "Object.Y()",
                        "Object.Z()",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "Direction",
                        "=",
                        "\"Up\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "CustomBehaviors::Movable::MoveTowardPosition"
                      },
                      "parameters": [
                        "Object",
                        "MoveableBehavior",
                        "Object.X()",
                        "Object.Y() - Object.Height() + 1",
                        "Object.Z()",
                        ""
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::SlidingDoor",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": [
        {
          "value": "",
          "type": "Behavior",
          "label": "MoveableBehavior",
          "description": "",
          "group": "Required",
          "extraInformation": [
            "CustomBehaviors::Movable"
          ],
          "hidden": false,
          "name": "MoveableBehavior"
        }
      ],
      "sharedPropertyDescriptors": []
    },
    {
      "description": "Controlls the body, head, and movement of a character",
      "fullName": "Character Controller",
      "name": "Character",
      "objectType": "Scene3D::Cube3DObject",
      "eventsFunctions": [
        {
          "fullName": "Initialize the object",
          "functionType": "Action",
          "name": "Initialize",
          "sentence": "Initialize _PARAM0_ with head _PARAM2_, body _PARAM3_, and collision box _PARAM4_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Cache"
                  },
                  "parameters": [
                    "Object"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "Body",
                    "Object.X()",
                    "Object.Y()",
                    "Object.Layer()"
                  ]
                },
                {
                  "type": {
                    "value": "LinkedObjects::LinkObjects"
                  },
                  "parameters": [
                    "",
                    "Object",
                    "Body"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "Head",
                    "Object.X()",
                    "Object.Y()",
                    "Object.Layer()"
                  ]
                },
                {
                  "type": {
                    "value": "Scene3D::Base3DBehavior::SetZ"
                  },
                  "parameters": [
                    "Head",
                    "Object3D",
                    "=",
                    "Body.Depth()"
                  ]
                },
                {
                  "type": {
                    "value": "LinkedObjects::LinkObjects"
                  },
                  "parameters": [
                    "",
                    "Object",
                    "Head"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "CollisionBox",
                    "Object.X()",
                    "Object.Y()",
                    "Object.Layer()"
                  ]
                },
                {
                  "type": {
                    "value": "ResizableCapability::ResizableBehavior::SetWidth"
                  },
                  "parameters": [
                    "CollisionBox",
                    "Resizable",
                    "=",
                    "max(Body.Width(), Head.Width())"
                  ]
                },
                {
                  "type": {
                    "value": "ResizableCapability::ResizableBehavior::SetHeight"
                  },
                  "parameters": [
                    "CollisionBox",
                    "Resizable",
                    "=",
                    "max(Body.Height(), Head.Height())"
                  ]
                },
                {
                  "type": {
                    "value": "Scene3D::Base3DBehavior::SetDepth"
                  },
                  "parameters": [
                    "CollisionBox",
                    "Object3D",
                    "=",
                    "Body.Depth() + Head.Depth()"
                  ]
                },
                {
                  "type": {
                    "value": "LinkedObjects::LinkObjects"
                  },
                  "parameters": [
                    "",
                    "Object",
                    "CollisionBox"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "CustomBehaviors::Character::PropertyControl"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "\"Player\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Cache"
                  },
                  "parameters": [
                    "Body"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "CustomBehaviors::Character::SetPropertyID"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "RandomInRange(10000, 99999)"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Character",
              "type": "behavior"
            },
            {
              "description": "Head",
              "name": "Head",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            },
            {
              "description": "Body",
              "name": "Body",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            },
            {
              "description": "",
              "name": "CollisionBox",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Update the object each frame",
          "fullName": "Update the object",
          "functionType": "Action",
          "name": "Update",
          "sentence": "Update _PARAM0_ with head _PARAM2_, body _PARAM3_, and collision box _PARAM4_. Update in respect to collision group _PARAM5_",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Build object from parts",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      },
                      "parameters": [
                        "",
                        "Bodies",
                        "Object",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetCenter"
                      },
                      "parameters": [
                        "Bodies",
                        "=",
                        "Object.CenterX()",
                        "=",
                        "Object.CenterY()"
                      ]
                    },
                    {
                      "type": {
                        "value": "RotateTowardAngle"
                      },
                      "parameters": [
                        "Bodies",
                        "Object.Angle()",
                        "0",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      },
                      "parameters": [
                        "",
                        "Heads",
                        "Object",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetCenter"
                      },
                      "parameters": [
                        "Heads",
                        "=",
                        "Object.CenterX()",
                        "=",
                        "Object.CenterY()"
                      ]
                    },
                    {
                      "type": {
                        "value": "RotateTowardAngle"
                      },
                      "parameters": [
                        "Heads",
                        "Object.Angle()",
                        "0",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 226,
              "colorG": 144,
              "colorR": 74,
              "creationTime": 0,
              "name": "Collision",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      },
                      "parameters": [
                        "",
                        "CollisionBox",
                        "Object",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetCenter"
                      },
                      "parameters": [
                        "CollisionBox",
                        "=",
                        "Object.CenterX()",
                        "=",
                        "Object.CenterY()"
                      ]
                    },
                    {
                      "type": {
                        "value": "RotateTowardAngle"
                      },
                      "parameters": [
                        "CollisionBox",
                        "Object.Angle()",
                        "0",
                        ""
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "CollisionNP"
                          },
                          "parameters": [
                            "CollisionBox",
                            "CollisionGroup",
                            "",
                            "",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SeparateFromObjects"
                          },
                          "parameters": [
                            "CollisionBox",
                            "CollisionGroup",
                            "yes"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "SetCenter"
                          },
                          "parameters": [
                            "Object",
                            "=",
                            "CollisionBox.CenterX()",
                            "=",
                            "CollisionBox.CenterY()"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Character",
              "type": "behavior"
            },
            {
              "description": "Head Group",
              "name": "Heads",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            },
            {
              "description": "Body Group",
              "name": "Bodies",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            },
            {
              "description": "",
              "name": "CollisionBox",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            },
            {
              "description": "Collision Group",
              "name": "CollisionGroup",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "the iD of the object.",
          "fullName": "ID",
          "functionType": "ExpressionAndCondition",
          "group": "Character Controller configuration",
          "name": "ID",
          "sentence": "the iD",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetReturnNumber"
                  },
                  "parameters": [
                    "Object.Behavior::PropertyID()"
                  ]
                }
              ]
            }
          ],
          "expressionType": {
            "type": "expression"
          },
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Character",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": [
        {
          "value": "Player",
          "type": "Choice",
          "label": "Control of the object",
          "description": "",
          "group": "",
          "extraInformation": [
            "Player",
            "Enemy"
          ],
          "hidden": false,
          "name": "Control"
        },
        {
          "value": "",
          "type": "Number",
          "unit": "Dimensionless",
          "label": "",
          "description": "",
          "group": "",
          "extraInformation": [],
          "hidden": true,
          "name": "ID"
        }
      ],
      "sharedPropertyDescriptors": []
    },
    {
      "description": "Controls the physics of items",
      "fullName": "Item Helper",
      "name": "Item",
      "objectType": "Scene3D::Cube3DObject",
      "eventsFunctions": [
        {
          "fullName": "Make an object \"hold\" an item",
          "functionType": "Action",
          "name": "HoldAnItem",
          "sentence": "_PARAM2_, hold item_PARAM0_ with a distance of _PARAM3_, an angle of _PARAM4_ degrees, and an elevation angle of _PARAM5_ degrees. Use an OffsetDistance of _PARAM6_ and an OffsetAngle of _PARAM7_.",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetCenterX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "(Center.CenterX() + cos(ToRad(Object.Angle() + OffsetAngle)) * OffsetDistance) + cos(ToRad(Angle)) * ((cos(ToRad(ElevationAngle)) * Distance))"
                  ]
                },
                {
                  "type": {
                    "value": "SetCenterY"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "(Center.CenterY() + sin(ToRad(Object.Angle() + OffsetAngle)) * OffsetDistance) + sin(ToRad(Angle)) * ((cos(ToRad(ElevationAngle)) * Distance))"
                  ]
                },
                {
                  "type": {
                    "value": "Scene3D::Base3DBehavior::SetCenterZ"
                  },
                  "parameters": [
                    "Object",
                    "Object3D",
                    "=",
                    "Center.Object3D::CenterZ() - (sin(ToRad(ElevationAngle)) * Distance)"
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "CustomBehaviors::Item",
              "type": "behavior"
            },
            {
              "description": "\"Center\" Object",
              "name": "Center",
              "supplementaryInformation": "Scene3D::Cube3DObject",
              "type": "objectList"
            },
            {
              "description": "Distance",
              "name": "Distance",
              "type": "expression"
            },
            {
              "description": "Angle, in degrees",
              "name": "Angle",
              "type": "expression"
            },
            {
              "description": "Elevation angle, in degrees",
              "name": "ElevationAngle",
              "type": "expression"
            },
            {
              "description": "",
              "name": "OffsetDistance",
              "type": "expression"
            },
            {
              "description": "",
              "name": "OffsetAngle",
              "type": "expression"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": [],
      "sharedPropertyDescriptors": []
    }
  ],
  "eventsBasedObjects": []
}